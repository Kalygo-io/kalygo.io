{
  "hints": {},
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "global_buyer_pullout_flag": {
          "type": "uint64",
          "key": "global_buyer_pullout_flag",
          "descr": ""
        },
        "global_buyer_arbitration_flag": {
          "type": "uint64",
          "key": "global_buyer_arbitration_flag",
          "descr": ""
        },
        "global_seller_arbitration_flag": {
          "type": "uint64",
          "key": "global_seller_arbitration_flag",
          "descr": ""
        },
        "global_buyer": {
          "type": "bytes",
          "key": "global_buyer",
          "descr": ""
        },
        "global_seller": {
          "type": "bytes",
          "key": "global_seller",
          "descr": ""
        },
        "global_escrow_payment_1": {
          "type": "uint64",
          "key": "global_escrow_payment_1",
          "descr": ""
        },
        "global_escrow_payment_2": {
          "type": "uint64",
          "key": "global_escrow_payment_2",
          "descr": ""
        },
        "global_total_price": {
          "type": "uint64",
          "key": "global_total_price",
          "descr": ""
        },
        "global_inspection_start_date": {
          "type": "uint64",
          "key": "global_inspection_start_date",
          "descr": ""
        },
        "global_inspection_end_date": {
          "type": "uint64",
          "key": "global_inspection_end_date",
          "descr": ""
        },
        "global_inspection_extension_date": {
          "type": "uint64",
          "key": "global_inspection_extension_date",
          "descr": ""
        },
        "global_moving_date": {
          "type": "uint64",
          "key": "global_moving_date",
          "descr": ""
        },
        "global_closing_date": {
          "type": "uint64",
          "key": "global_closing_date",
          "descr": ""
        },
        "global_free_funds_date": {
          "type": "uint64",
          "key": "global_free_funds_date",
          "descr": ""
        },
        "global_asa_id": {
          "type": "uint64",
          "key": "global_asa_id",
          "descr": ""
        }
      },
      "reserved": {}
    }
  },
  "contract": {
    "name": "EscrowContract",
    "methods": [
      {
        "name": "create",
        "args": [
          {
            "type": "address",
            "name": "global_buyer"
          },
          {
            "type": "address",
            "name": "global_seller"
          },
          {
            "type": "uint64",
            "name": "global_escrow_payment_1"
          },
          {
            "type": "uint64",
            "name": "global_escrow_payment_2"
          },
          {
            "type": "uint64",
            "name": "global_total_price"
          },
          {
            "type": "uint64",
            "name": "global_inspection_start_date"
          },
          {
            "type": "uint64",
            "name": "global_inspection_end_date"
          },
          {
            "type": "uint64",
            "name": "global_inspection_extension_date"
          },
          {
            "type": "uint64",
            "name": "global_moving_date"
          },
          {
            "type": "uint64",
            "name": "global_closing_date"
          },
          {
            "type": "uint64",
            "name": "global_free_funds_date"
          },
          {
            "type": "uint64",
            "name": "global_asa_id"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "add_key_to_buyer_note_box",
        "args": [
          {
            "type": "string",
            "name": "notes"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "add_key_to_seller_note_box",
        "args": [
          {
            "type": "string",
            "name": "notes"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "buyer_set_arbitration",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "buyer_set_pullout",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optin_to_ASA",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optout_from_ASA",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "seller_set_arbitration",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "withdraw_escrow_balance",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "withdraw_balance",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ],
    "networks": {}
  }
}
